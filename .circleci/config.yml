
version: 2.1 

orbs:
  aws-ecr: circleci/aws-ecr@9.3.4
  aws-ecs: circleci/aws-ecs@6.0.0
  aws-cli: circleci/aws-cli@5.1.0 

jobs:
  build:
    docker:
      - image: cimg/node:22.9.0
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Build Docker Image
          command: |
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 010526248296.dkr.ecr.ap-south-1.amazonaws.com
            docker build -t circleci-node .
            docker tag circleci-node:latest 010526248296.dkr.ecr.ap-south-1.amazonaws.com/circleci-node:latest
      - aws-ecr/push-image:
          repository: '${MY_APP_PREFIX}'
          tag: latest
          region: $AWS_REGION

  register-task-definition:
    docker:
      - image: cimg/python:3.8
    steps:
      - aws-cli/setup:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
          aws_region: $AWS_REGION
      - run:
          name: Register New Task Definition
          command: |
            # Use the task definition file from your project
            NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://task-definition.json | jq -r .taskDefinition.taskDefinitionArn)
            echo "New Task Definition ARN: $NEW_TASK_DEF_ARN"

  deploy:
    docker:
      - image: cimg/python:3.8  # Use a different image to run AWS CLI
    steps:
      - aws-cli/setup:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
          aws_region: $AWS_REGION
      - run:
          name: Update ECS Service
          command: |
            aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment 

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
